{"version":3,"sources":["components/Carousel/Carousel.tsx","components/Input/Input.tsx","components/Form/Form.tsx","App.tsx","index.tsx"],"names":["Carousel","state","transform","handleButton","direction","props","images","step","frameSize","itemWidth","infinite","sizeOfHidden","length","setState","newTransform","Math","min","max","handlePrevButton","handleNextButton","this","animationDuration","visibleWidthOfCarousel","className","style","width","transition","gap","map","image","index","src","alt","height","type","onClick","disabled","Component","Input","labelText","id","value","onChange","name","htmlFor","Form","hadleInfinite","handleChange","checked","App","event","target","Number","React","ReactDOM","render","document","getElementById"],"mappings":"2RAgBaA,EAAb,4MACEC,MAAyB,CACvBC,UAAW,GAFf,EAKEC,aAAe,SAACC,GACd,MAMI,EAAKC,MALPC,EADF,EACEA,OACAC,EAFF,EAEEA,KACAC,EAHF,EAGEA,UACAC,EAJF,EAIEA,UACAC,EALF,EAKEA,SAGIC,GAAgBL,EAAOM,OAASJ,GAAaC,EAEnD,EAAKI,UAAS,SAACZ,GACb,IAAMa,EAA6B,SAAdV,EACjBW,KAAKC,IAAIf,EAAMC,UAAaO,EAAYF,EAAO,GAC/CQ,KAAKE,IAAIhB,EAAMC,UAAaO,EAAYF,GAAQI,GAEpD,OAAqB,IAAjBG,GAAoC,SAAdV,GAAwBM,EACzC,CAAER,WAAYS,GAGnBG,KAAkBH,GACD,SAAdP,GACAM,EAEE,CAAER,UAAW,GAGf,CAAEA,UAAWY,OAhC1B,EAoCEI,iBAAmB,WACjB,EAAKf,aAAa,SArCtB,EAwCEgB,iBAAmB,WACjB,EAAKhB,aAAa,SAzCtB,4CA4CE,WACE,MAMIiB,KAAKf,MALPC,EADF,EACEA,OACAE,EAFF,EAEEA,UACAC,EAHF,EAGEA,UACAY,EAJF,EAIEA,kBACAX,EALF,EAKEA,SAGMR,EAAckB,KAAKnB,MAAnBC,UAEFoB,EAAyBb,EAAYD,EAErCG,GAAgBL,EAAOM,OAASJ,GAAaC,EAEnD,OACE,sBACEc,UAAU,WACVC,MAAO,CAAEC,MAAM,GAAD,OAAKH,EAAL,OAFhB,UAIE,oBACEC,UAAU,iBACVC,MAAO,CACLtB,UAAU,cAAD,OAAgBA,EAAhB,OACTwB,WAAW,GAAD,OAAKL,EAAL,MACVM,IAAK,OALT,SAQGrB,EAAOsB,KAAI,SAACC,EAAOC,GAAR,OACV,6BACE,qBACEC,IAAKF,EACLG,IAAG,sBAAYF,EAAQ,GACvBL,MAAOhB,EACPwB,OAAQxB,KALHoB,QAWb,sBAAKN,UAAU,oBAAf,UACE,wBACEW,KAAK,SACLX,UAAU,mBACVY,QAASf,KAAKF,iBACdkB,SAAwB,IAAdlC,IAAoBQ,EAJhC,SAMG,MAGH,wBACE,UAAQ,OACRwB,KAAK,SACLX,UAAU,mBACVY,QAASf,KAAKD,iBACdiB,SAAUlC,KAAeS,IACnBD,EANR,SAQG,gBAtGb,GAA8B2B,aCFjBC,G,WAAyB,SAAC,GAAD,IACpCC,EADoC,EACpCA,UACAC,EAFoC,EAEpCA,GACAC,EAHoC,EAGpCA,MACAzB,EAJoC,EAIpCA,IACAC,EALoC,EAKpCA,IACAV,EANoC,EAMpCA,KACAmC,EAPoC,EAOpCA,SACAC,EARoC,EAQpCA,KARoC,OAUpC,wBACEC,QAASJ,EACTjB,UAAU,YAFZ,UAIGgB,EACD,uBACEL,KAAK,SACLX,UAAU,QACViB,GAAIA,EACJG,KAAMA,EACN3B,IAAKA,EACLC,IAAKA,EACLV,KAAMA,EACNmC,SAAUA,EACVD,MAAOA,SCtBAI,EAAwB,SAAC,GAAD,IACnCvC,EADmC,EACnCA,OACAC,EAFmC,EAEnCA,KACAC,EAHmC,EAGnCA,UACAC,EAJmC,EAInCA,UACAY,EALmC,EAKnCA,kBACAX,EANmC,EAMnCA,SACAoC,EAPmC,EAOnCA,cACAC,EARmC,EAQnCA,aARmC,OAUnC,uBAAMxB,UAAU,OAAhB,UACE,cAAC,EAAD,CACEgB,UAAU,aACVC,GAAG,SACHG,KAAK,YACLF,MAAOhC,EACPO,IAAI,MACJC,IAAI,MACJV,KAAK,IACLmC,SAAUK,IAGZ,cAAC,EAAD,CACER,UAAU,aACVC,GAAG,UACHG,KAAK,YACLF,MAAOjC,EACPQ,IAAI,IACJC,IAAG,UAAKX,EAAOM,QACfL,KAAK,IACLmC,SAAUK,IAGZ,cAAC,EAAD,CACER,UAAU,OACVC,GAAG,SACHG,KAAK,OACLF,MAAOlC,EACPS,IAAI,IACJC,IAAG,UAAKX,EAAOM,OAASJ,GACxBD,KAAK,IACLmC,SAAUK,IAGZ,cAAC,EAAD,CACER,UAAU,WACVC,GAAG,cACHG,KAAK,oBACLF,MAAOpB,EACPL,IAAI,MACJC,IAAI,OACJV,KAAK,MACLmC,SAAUK,IAGZ,wBACExB,UAAU,iBADZ,UAGE,uBACEA,UAAU,gBACVoB,KAAK,WACLT,KAAK,WACLc,QAAStC,EACTgC,SAAUI,IARd,kBCzDSG,EAAb,4MACEhD,MAAQ,CACNK,OAAQ,CACN,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,gBAEFC,KAAM,EACNC,UAAW,EACXC,UAAW,IACXY,kBAAmB,IACnBX,UAAU,GAlBd,EAqBEqC,aAAe,SAACG,GACd,EAAKrC,UAAS,SAAAZ,GAAK,kCACdA,GADc,kBAEhBiD,EAAMC,OAAOR,KAAOS,OAAOF,EAAMC,OAAOV,aAxB/C,EA4BEK,cAAgB,WACd,EAAKjC,UAAS,SAAAZ,GAAK,MAAK,CACtBS,UAAWT,EAAMS,cA9BvB,4CAkCE,WACE,MAOIU,KAAKnB,MANPK,EADF,EACEA,OACAC,EAFF,EAEEA,KACAC,EAHF,EAGEA,UACAC,EAJF,EAIEA,UACAY,EALF,EAKEA,kBACAX,EANF,EAMEA,SAGF,OACE,sBAAKa,UAAU,MAAf,UACE,oBACE,UAAQ,QACRA,UAAU,aAFZ,iCAIoBjB,EAAOM,OAJ3B,aAOA,cAAC,EAAD,CACEN,OAAQA,EACRC,KAAMA,EACNC,UAAWA,EACXC,UAAWA,EACXY,kBAAmBA,EACnBX,SAAUA,IAGZ,cAAC,EAAD,CACEJ,OAAQA,EACRC,KAAMA,EACNC,UAAWA,EACXC,UAAWA,EACXY,kBAAmBA,EACnBX,SAAUA,EACVoC,cAAe1B,KAAK0B,cACpBC,aAAc3B,KAAK2B,sBAtE7B,GAAyBM,IAAMhB,WCX/BiB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,U","file":"static/js/main.b2e6f2b7.chunk.js","sourcesContent":["import { Component } from 'react';\nimport './Carousel.scss';\n\ntype Props = {\n  images: string[];\n  step: number;\n  frameSize: number;\n  itemWidth: number;\n  animationDuration: number;\n  infinite: boolean;\n};\n\ntype State = {\n  transform: number,\n};\n\nexport class Carousel extends Component<Props, State> {\n  state: Readonly<State> = {\n    transform: 0,\n  };\n\n  handleButton = (direction: 'prev' | 'next') => {\n    const {\n      images,\n      step,\n      frameSize,\n      itemWidth,\n      infinite,\n    } = this.props;\n\n    const sizeOfHidden = (images.length - frameSize) * itemWidth;\n\n    this.setState((state) => {\n      const newTransform = direction === 'prev'\n        ? Math.min(state.transform + (itemWidth * step), 0)\n        : Math.max(state.transform - (itemWidth * step), -sizeOfHidden);\n\n      if (newTransform === 0 && direction === 'prev' && infinite) {\n        return { transform: -sizeOfHidden };\n      }\n\n      if (newTransform === -sizeOfHidden\n          && direction === 'next'\n          && infinite\n      ) {\n        return { transform: 0 };\n      }\n\n      return { transform: newTransform };\n    });\n  };\n\n  handlePrevButton = () => {\n    this.handleButton('prev');\n  };\n\n  handleNextButton = () => {\n    this.handleButton('next');\n  };\n\n  render() {\n    const {\n      images,\n      frameSize,\n      itemWidth,\n      animationDuration,\n      infinite,\n    } = this.props;\n\n    const { transform } = this.state;\n\n    const visibleWidthOfCarousel = itemWidth * frameSize;\n\n    const sizeOfHidden = (images.length - frameSize) * itemWidth;\n\n    return (\n      <div\n        className=\"Carousel\"\n        style={{ width: `${visibleWidthOfCarousel}px` }}\n      >\n        <ul\n          className=\"Carousel__list\"\n          style={{\n            transform: `translateX(${transform}px)`,\n            transition: `${animationDuration}ms`,\n            gap: '1px',\n          }}\n        >\n          {images.map((image, index) => (\n            <li key={image}>\n              <img\n                src={image}\n                alt={`emojiâ„–-${index + 1}`}\n                width={itemWidth}\n                height={itemWidth}\n              />\n            </li>\n          ))}\n        </ul>\n\n        <div className=\"Carousel__buttons\">\n          <button\n            type=\"button\"\n            className=\"Carousel__button\"\n            onClick={this.handlePrevButton}\n            disabled={transform === 0 && !infinite}\n          >\n            {'<'}\n          </button>\n\n          <button\n            data-cy=\"next\"\n            type=\"button\"\n            className=\"Carousel__button\"\n            onClick={this.handleNextButton}\n            disabled={transform === -sizeOfHidden\n              && !infinite}\n          >\n            {'>'}\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './Input.scss';\n\ntype Props = {\n  labelText: string;\n  id: string;\n  value: string | number;\n  min: string;\n  max: string;\n  step: string;\n  onChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  name: string;\n};\n\nexport const Input: React.FC<Props> = ({\n  labelText,\n  id,\n  value,\n  min,\n  max,\n  step,\n  onChange,\n  name,\n}) => (\n  <label\n    htmlFor={id}\n    className=\"Container\"\n  >\n    {labelText}\n    <input\n      type=\"number\"\n      className=\"Input\"\n      id={id}\n      name={name}\n      min={min}\n      max={max}\n      step={step}\n      onChange={onChange}\n      value={value}\n    />\n  </label>\n);\n","import React from 'react';\nimport './Form.scss';\nimport '../Input/Input.scss';\nimport { Input } from '../Input';\n\ntype Props = {\n  images: string[];\n  step: number;\n  frameSize: number;\n  itemWidth: number;\n  animationDuration: number;\n  infinite: boolean;\n  hadleInfinite: () => void;\n  handleChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\n};\n\nexport const Form: React.FC<Props> = ({\n  images,\n  step,\n  frameSize,\n  itemWidth,\n  animationDuration,\n  infinite,\n  hadleInfinite,\n  handleChange,\n}) => (\n  <form className=\"Form\">\n    <Input\n      labelText=\"Item width\"\n      id=\"itemId\"\n      name=\"itemWidth\"\n      value={itemWidth}\n      min=\"100\"\n      max=\"200\"\n      step=\"5\"\n      onChange={handleChange}\n    />\n\n    <Input\n      labelText=\"Frame size\"\n      id=\"frameId\"\n      name=\"frameSize\"\n      value={frameSize}\n      min=\"1\"\n      max={`${images.length}`}\n      step=\"1\"\n      onChange={handleChange}\n    />\n\n    <Input\n      labelText=\"Step\"\n      id=\"stepId\"\n      name=\"step\"\n      value={step}\n      min=\"1\"\n      max={`${images.length - frameSize}`}\n      step=\"1\"\n      onChange={handleChange}\n    />\n\n    <Input\n      labelText=\"Duration\"\n      id=\"animationId\"\n      name=\"animationDuration\"\n      value={animationDuration}\n      min=\"500\"\n      max=\"5000\"\n      step=\"100\"\n      onChange={handleChange}\n    />\n\n    <label\n      className=\"Form--infinite\"\n    >\n      <input\n        className=\"Form--checked\"\n        name=\"infinite\"\n        type=\"checkbox\"\n        checked={infinite}\n        onChange={hadleInfinite}\n      />\n      Infinite\n    </label>\n  </form>\n);\n","import React from 'react';\nimport './App.scss';\nimport { Carousel } from './components/Carousel';\nimport { Form } from './components/Form';\n\ninterface State {\n  images: string[];\n  step: number;\n  frameSize: number;\n  itemWidth: number;\n  animationDuration: number;\n  infinite: boolean;\n}\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    step: 3,\n    frameSize: 3,\n    itemWidth: 130,\n    animationDuration: 1000,\n    infinite: false,\n  };\n\n  handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState(state => ({\n      ...state,\n      [event.target.name]: Number(event.target.value),\n    }));\n  };\n\n  hadleInfinite = () => {\n    this.setState(state => ({\n      infinite: !state.infinite,\n    }));\n  };\n\n  render() {\n    const {\n      images,\n      step,\n      frameSize,\n      itemWidth,\n      animationDuration,\n      infinite,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1\n          data-cy=\"title\"\n          className=\"App__title\"\n        >\n          {`Carousel with ${images.length} images`}\n        </h1>\n\n        <Carousel\n          images={images}\n          step={step}\n          frameSize={frameSize}\n          itemWidth={itemWidth}\n          animationDuration={animationDuration}\n          infinite={infinite}\n        />\n\n        <Form\n          images={images}\n          step={step}\n          frameSize={frameSize}\n          itemWidth={itemWidth}\n          animationDuration={animationDuration}\n          infinite={infinite}\n          hadleInfinite={this.hadleInfinite}\n          handleChange={this.handleChange}\n        />\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}