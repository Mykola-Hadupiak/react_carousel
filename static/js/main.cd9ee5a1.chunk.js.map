{"version":3,"sources":["components/Input/Input.tsx","components/Carousel/Carousel.tsx","App.tsx","index.tsx"],"names":["Input","label","type","value","onChange","min","max","step","defaultValue","event","target","className","Carousel","images","useState","transform","setTransform","itemWidth","setItemWidth","frameSize","setFrameSize","setStep","animation","setAnimation","isInfinite","setIsInfinite","leftButtonDisabled","setLeftButtonDisabled","rightButtonDisabled","setRightButtonDisabled","frameSizeWidth","style","width","map","image","index","transition","src","alt","height","onClick","newTransform","length","disabled","cursor","checked","prev","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cd9ee5a1.chunk.js","sourcesContent":["import React from 'react';\nimport './Input.scss';\n\ntype Props = {\n  label: string,\n  type: string,\n  value: number,\n  onChange: (val: number) => void,\n  min: number,\n  max: number,\n  step: number,\n};\n\nexport const Input: React.FC<Props> = ({\n  label,\n  type,\n  value,\n  onChange,\n  min,\n  max,\n  step,\n}) => {\n  return (\n    <label>\n      {label}\n\n      <input\n        type={type}\n        defaultValue={value}\n        onChange={(event) => onChange(+event.target.value)}\n        className=\"input\"\n        min={min}\n        max={max}\n        step={step}\n      />\n    </label>\n  );\n};\n","import React, { useState } from 'react';\nimport './Carousel.scss';\nimport { Input } from '../Input/Input';\n\ntype Props = {\n  images: string[]\n};\n\nexport const Carousel: React.FC<Props> = ({ images }) => {\n  const [transform, setTransform] = useState(0);\n\n  const [itemWidth, setItemWidth] = useState(130);\n  const [frameSize, setFrameSize] = useState(3);\n  const [step, setStep] = useState(3);\n  const [animation, setAnimation] = useState(1000);\n  const [isInfinite, setIsInfinite] = useState(false);\n\n  const [leftButtonDisabled, setLeftButtonDisabled] = useState(true);\n  const [rightButtonDisabled, setRightButtonDisabled] = useState(false);\n\n  const frameSizeWidth = itemWidth * frameSize;\n\n  const handleLeft = () => {\n    let newTransform = transform + itemWidth * step;\n\n    if (isInfinite) {\n      if (newTransform > 0) {\n        newTransform = -itemWidth * (images.length - frameSize);\n      }\n\n      setRightButtonDisabled(false);\n    } else {\n      if (newTransform >= 0) {\n        newTransform = 0;\n        setLeftButtonDisabled(true);\n      }\n\n      setRightButtonDisabled(false);\n    }\n\n    setTransform(newTransform);\n  };\n\n  const handleRight = () => {\n    let newTransform = transform - itemWidth * step;\n\n    if (isInfinite) {\n      if (newTransform < -itemWidth * (images.length - frameSize)) {\n        newTransform = 0;\n      }\n\n      setLeftButtonDisabled(false);\n    } else {\n      if (newTransform <= -itemWidth * (images.length - frameSize)) {\n        newTransform = -itemWidth * (images.length - frameSize);\n        setRightButtonDisabled(true);\n      }\n\n      setLeftButtonDisabled(false);\n    }\n\n    setTransform(newTransform);\n  };\n\n  const handleCheckboxChange = () => {\n    setIsInfinite(prev => {\n      if (!prev) {\n        setLeftButtonDisabled(false);\n        setRightButtonDisabled(false);\n\n        return !prev;\n      }\n\n      if (transform === 0) {\n        setLeftButtonDisabled(true);\n      }\n\n      return !prev;\n    });\n  };\n\n  return (\n    <div className=\"Carousel\">\n      <ul\n        className=\"Carousel__list\"\n        style={{ width: frameSizeWidth }}\n      >\n        {images.map((image, index) => (\n          <li\n            className=\"Carousel__item\"\n            key={image}\n            style={{\n              transform: `translateX(${transform}px)`,\n              transition: `transform ${animation}ms ease`,\n            }}\n          >\n            <img\n              src={image}\n              alt={`img-${index + 1}`}\n              className=\"image\"\n              width={itemWidth}\n              height={itemWidth}\n            />\n          </li>\n        ))}\n      </ul>\n\n      <div className=\"Carousel__buttons\">\n        <button\n          type=\"button\"\n          className=\"button\"\n          onClick={handleLeft}\n          disabled={leftButtonDisabled}\n          style={{ cursor: leftButtonDisabled ? 'auto' : 'pointer' }}\n        >\n          {'<'}\n        </button>\n\n        <button\n          type=\"button\"\n          className=\"button\"\n          onClick={handleRight}\n          data-cy=\"next\"\n          disabled={rightButtonDisabled}\n          style={{ cursor: rightButtonDisabled ? 'auto' : 'pointer' }}\n        >\n          {'>'}\n        </button>\n      </div>\n\n      <div className=\"Carousel__form\">\n        <Input\n          label=\"Item width\"\n          type=\"number\"\n          value={itemWidth}\n          onChange={setItemWidth}\n          min={100}\n          max={180}\n          step={5}\n        />\n\n        <Input\n          label=\"Frame size\"\n          type=\"number\"\n          value={frameSize}\n          onChange={setFrameSize}\n          min={1}\n          max={6}\n          step={1}\n        />\n\n        <Input\n          label=\"Step\"\n          type=\"number\"\n          value={step}\n          onChange={setStep}\n          min={1}\n          max={7}\n          step={1}\n        />\n\n        <Input\n          label=\"Animation\"\n          type=\"number\"\n          value={animation}\n          onChange={setAnimation}\n          min={500}\n          max={2000}\n          step={100}\n        />\n\n        <label>\n          Infinite\n\n          <input\n            type=\"checkbox\"\n            checked={isInfinite}\n            onChange={handleCheckboxChange}\n            className=\"checkbox\"\n          />\n        </label>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './App.scss';\nimport { Carousel } from './components/Carousel/Carousel';\n\ntype Images = string[];\n\nconst images: Images = [\n  './img/1.png',\n  './img/2.png',\n  './img/3.png',\n  './img/4.png',\n  './img/5.png',\n  './img/6.png',\n  './img/7.png',\n  './img/8.png',\n  './img/9.png',\n  './img/10.png',\n];\n\nexport const App: React.FC = () => {\n  return (\n    <div className=\"App\">\n      <h1 data-cy=\"title\">\n        {`Carousel with ${images.length} images`}\n      </h1>\n\n      <Carousel images={images} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}